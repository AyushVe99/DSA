class Solution {
    public int[][] merge(int[][] arr) {
        
        // Sorting the Array based on first index of each array...
         Arrays.sort(arr, (a, b) -> Integer.compare(a[0], b[0]));

          List<int[]> merged = new ArrayList<>();

         for(int[] interval: arr){
            
             // If the list is empty or current interval does not overlap, add it
            if(merged.isEmpty() || merged.get(merged.size() - 1)[1]< interval[0]){
               merged.add(interval);
            }
             // Overlap found, merge intervals
            else{
                merged.get(merged.size() - 1)[1]= Math.max(merged.get(merged.size() - 1)[1], interval[1]);

            }
            
         }
          // Convert List<int[]> to int[][]
    return merged.toArray(new int[merged.size()][]); 
    }
}
